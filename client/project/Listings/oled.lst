C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled
                    -.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地       a
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接P12
  19          //              DC   接P13
  20          //              CS   接P14               
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/。
  30          #include "oled.h"
  31          //#include "stdlib.h"
  32          #include "oledfont.h"    
  33          #include "delay.h"
*** WARNING C235 IN LINE 7 OF DELAY.H: parameter 1: different types
  34          //OLED的显存
  35          //存放格式如下.
  36          //[0]0 1 2 3 ... 127  
  37          //[1]0 1 2 3 ... 127  
  38          //[2]0 1 2 3 ... 127  
  39          //[3]0 1 2 3 ... 127  
  40          //[4]0 1 2 3 ... 127  
  41          //[5]0 1 2 3 ... 127  
  42          //[6]0 1 2 3 ... 127  
  43          //[7]0 1 2 3 ... 127         
  44          
  45          /**********************************************
  46          //IIC Start
  47          **********************************************/
  48          void IIC_Start()
  49          {
  50   1      
  51   1        OLED_SCLK_Set() ;
  52   1        OLED_SDIN_Set();
  53   1        OLED_SDIN_Clr();
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 2   

  54   1        OLED_SCLK_Clr();
  55   1      }
  56          
  57          /**********************************************
  58          //IIC Stop
  59          **********************************************/
  60          void IIC_Stop()
  61          {
  62   1      OLED_SCLK_Set() ;
  63   1      //  OLED_SCLK_Clr();
  64   1        OLED_SDIN_Clr();
  65   1        OLED_SDIN_Set();
  66   1        
  67   1      }
  68          
  69          void IIC_Wait_Ack()
  70          {
  71   1      
  72   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  73   1        //GPIOB->CRH |= 0x00080000;
  74   1      //  OLED_SDA = 1;
  75   1      //  delay_us(1);
  76   1        //OLED_SCL = 1;
  77   1        //delay_us(50000);
  78   1      /*  while(1)
  79   1        {
  80   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  81   1          {
  82   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  83   1            //GPIOB->CRH |= 0x00030000;
  84   1            return;
  85   1          }
  86   1        }
  87   1      */
  88   1        OLED_SCLK_Set() ;
  89   1        OLED_SCLK_Clr();
  90   1      }
  91          /**********************************************
  92          // IIC Write byte
  93          **********************************************/
  94          
  95          void Write_IIC_Byte(unsigned char IIC_Byte)
  96          {
  97   1        unsigned char i;
  98   1        unsigned char m,da;
  99   1        da=IIC_Byte;
 100   1        OLED_SCLK_Clr();
 101   1        for(i=0;i<8;i++)    
 102   1        {
 103   2            m=da;
 104   2          //  OLED_SCLK_Clr();
 105   2          m=m&0x80;
 106   2          if(m==0x80)
 107   2          {OLED_SDIN_Set();}
 108   2          else OLED_SDIN_Clr();
 109   2            da=da<<1;
 110   2          OLED_SCLK_Set();
 111   2          OLED_SCLK_Clr();
 112   2          }
 113   1      
 114   1      
 115   1      }
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 3   

 116          /**********************************************
 117          // IIC Write Command
 118          **********************************************/
 119          void Write_IIC_Command(unsigned char IIC_Command)
 120          {
 121   1         IIC_Start();
 122   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 123   1        IIC_Wait_Ack(); 
 124   1         Write_IIC_Byte(0x00);      //write command
 125   1        IIC_Wait_Ack(); 
 126   1         Write_IIC_Byte(IIC_Command); 
 127   1        IIC_Wait_Ack(); 
 128   1         IIC_Stop();
 129   1      }
 130          /**********************************************
 131          // IIC Write Data
 132          **********************************************/
 133          void Write_IIC_Data(unsigned char IIC_Data)
 134          {
 135   1         IIC_Start();
 136   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 137   1        IIC_Wait_Ack(); 
 138   1         Write_IIC_Byte(0x40);      //write data
 139   1        IIC_Wait_Ack(); 
 140   1         Write_IIC_Byte(IIC_Data);
 141   1        IIC_Wait_Ack(); 
 142   1         IIC_Stop();
 143   1      }
 144          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 145          {
 146   1        if(cmd)             //如果cmd=0  则写命令 否则写入数据
 147   1            {
 148   2      
 149   2         Write_IIC_Data(dat);
 150   2         
 151   2          }
 152   1        else {
 153   2         Write_IIC_Command(dat);
 154   2          
 155   2        }
 156   1      
 157   1      
 158   1      }
 159          
 160          /********************************************
 161          // fill_Picture
 162          ********************************************/
 163          /*void fill_picture(unsigned char fill_Data)
 164          {
 165            unsigned char m,n;
 166            for(m=0;m<8;m++)
 167            {
 168              OLED_WR_Byte(0xb0+m,0);   //page0-page1
 169              OLED_WR_Byte(0x00,0);   //low column start address
 170              OLED_WR_Byte(0x10,0);   //high column start address
 171              for(n=0;n<128;n++)
 172                {
 173                  OLED_WR_Byte(fill_Data,1);
 174                }
 175            }
 176          } */
 177          
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 4   

 178          
 179          /***********************Delay****************************************/
 180          /*void Delay_50ms(unsigned int Del_50ms)
 181          {
 182            unsigned int m;
 183            for(;Del_50ms>0;Del_50ms--)
 184              for(m=6245;m>0;m--);
 185          } */
 186          
 187          /*void Delay_1ms(unsigned int Del_1ms)
 188          {
 189            unsigned char j;
 190            while(Del_1ms--)
 191            { 
 192              for(j=0;j<123;j++);
 193            }
 194          } */
 195          
 196          //坐标设置
 197          
 198            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 199          {   OLED_WR_Byte(0xb0+y,OLED_CMD);            //OLED_CMD=0  写入命令
 200   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 201   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 202   1      }       
 203          //开启OLED显示    
 204          /*void OLED_Display_On(void)
 205          {
 206            OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 207            OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 208            OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 209          }
 210          //关闭OLED显示     
 211          void OLED_Display_Off(void)
 212          {
 213            OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 214            OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 215            OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 216          } */           
 217          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 218          void OLED_Clear(void)  
 219          {  
 220   1        u8 i,n;       
 221   1        for(i=0;i<8;i++)  
 222   1        {  
 223   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）//OLED_CMD=0  写入命令
 224   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 225   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 226   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA);  //OLED_DATA=1 写入数据0清除屏幕
 227   2        } 
 228   1      }
 229          /********************************************************************************************/
 230          //填充屏幕
 231          /*void OLED_On(void)  
 232          {  
 233            u8 i,n;       
 234            for(i=0;i<8;i++)  
 235            {  
 236              OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）  //OLED_CMD=0  写入命令
 237              OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 238              OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 239              for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA);  //OLED_DATA=1 写入数据1填充屏幕
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 5   

 240            } //更新显示
 241          } */
 242          //在指定位置显示一个字符,包括部分字符
 243          //x:0~127
 244          //y:0~63
 245          //mode:0,反白显示;1,正常显示         
 246          //size:选择字体 16/12 
 247          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)  //#define  u8 unsigned char 
 248          {       
 249   1        unsigned char c=0,i=0;  
 250   1          c=chr-' ';                                  //得到偏移后的值      
 251   1          if(x>Max_Column-1)        //Max_Column= 128
 252   1          {
 253   2            x=0;y=y+2;
 254   2          }
 255   1          if(Char_Size ==16)       //是否是8*16点阵
 256   1            {
 257   2            OLED_Set_Pos(x,y);  
 258   2            for(i=0;i<8;i++)
 259   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA); //8*16点阵
 260   2            OLED_Set_Pos(x,y+1);
 261   2            for(i=0;i<8;i++)
 262   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 263   2            }
 264   1            else               //6*8点阵
 265   1            { 
 266   2              OLED_Set_Pos(x,y);
 267   2              for(i=0;i<6;i++)
 268   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 269   2              
 270   2            }
 271   1      }
 272          //m^n函数
 273          u32 oled_pow(u8 m,u8 n)
 274          {
 275   1        u32 result=1;  
 276   1        while(n--)result*=m;    
 277   1        return result;
 278   1      }         
 279          //显示2个数字
 280          //x,y :起点坐标  
 281          //len :数字的位数
 282          //size:字体大小
 283          //mode:模式 0,填充模式;1,叠加模式
 284          //num:数值(0~4294967295);       
 285          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 286          {           
 287   1        u8 t,temp;
 288   1        u8 enshow=0;               
 289   1        for(t=0;t<len;t++)
 290   1        {
 291   2          temp=(num/oled_pow(10,len-t-1))%10;
 292   2          if(enshow==0&&t<(len-1))
 293   2          {
 294   3            if(temp==0)
 295   3            {
 296   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 297   4              continue;
 298   4            }else enshow=1; 
 299   3             
 300   3          }
 301   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 6   

 302   2        }
 303   1      } 
 304          //显示一个字符号串
 305          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 306          {
 307   1        unsigned char j=0;
 308   1        while (chr[j]!='\0')
 309   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 310   2            x+=8;
 311   2          if(x>120){x=0;y+=2;}
 312   2            j++;
 313   2        }
 314   1      }
 315          //显示汉字
 316          void OLED_ShowCHinese(u8 x,u8 y,u8 no)    //no代表第几个字
 317          {               
 318   1        u8 t,adder=0;
 319   1        OLED_Set_Pos(x,y);  
 320   1          for(t=0;t<16;t++)
 321   1          {
 322   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 323   2              adder+=1;
 324   2           }  
 325   1          OLED_Set_Pos(x,y+1);  
 326   1          for(t=0;t<16;t++)
 327   1            { 
 328   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 329   2              adder+=1;
 330   2            }         
 331   1      }
 332          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 333          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 334          {   
 335   1       unsigned int j=0;
 336   1       unsigned char x,y;
 337   1        
 338   1        if(y1%8==0) y=y1/8;      
 339   1        else y=y1/8+1;
 340   1        for(y=y0;y<y1;y++)
 341   1        {
 342   2          OLED_Set_Pos(x0,y);
 343   2          for(x=x0;x<x1;x++)
 344   2            {      
 345   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 346   3            }
 347   2        }
 348   1      } 
 349          
 350          
 351          
 352          
 353          
 354          /*********************************************************************************************************
             -*********/
 355          //初始化SSD1306             
 356          void OLED_Init(void)
 357          {   
 358   1       
 359   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 360   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 7   

 361   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 362   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 363   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 364   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 365   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 366   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 367   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 368   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 369   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 370   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 371   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 372   1        OLED_WR_Byte(0x00,OLED_CMD);//
 373   1        
 374   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 375   1        OLED_WR_Byte(0x80,OLED_CMD);//
 376   1        
 377   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 378   1        OLED_WR_Byte(0x05,OLED_CMD);//
 379   1        
 380   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 381   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 382   1        
 383   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 384   1        OLED_WR_Byte(0x12,OLED_CMD);//
 385   1        
 386   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 387   1        OLED_WR_Byte(0x30,OLED_CMD);//
 388   1        
 389   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 390   1        OLED_WR_Byte(0x14,OLED_CMD);//
 391   1        
 392   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 393   1      }  
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
C51 COMPILER V9.01   OLED                                                                  06/25/2019 09:02:08 PAGE 8   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1057    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
